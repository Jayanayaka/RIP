package {{myPackage}}.impl;

import {{package}}.*;
import {{modelPackage}}.*;
{{#operations}}{{#operation}}{{#isMultipart}}import org.jboss.resteasy.plugins.providers.multipart.MultipartFormDataInput;
{{/isMultipart}}{{/operation}}{{/operations}}

{{#imports}}import {{import}};
{{/imports}}

import java.util.List;
import {{package}}.NotFoundException;

import java.io.InputStream;

import javax.ws.rs.core.Response;
import javax.ws.rs.core.SecurityContext;
import {{myPackage}}.persistence.dao.{{classname}}DAO;
import {{myPackage}}.persistence.daoimpl.{{classname}}DAOImpl;
import {{myPackage}}.util.JsonUtility;

{{>generatedAnnotation}}
{{#operations}}
public class {{classname}}ServiceImpl extends {{classname}}Service {
  {{#operation}}
      @Override
      public Response {{nickname}}({{#isMultipart}}MultipartFormDataInput input,{{/isMultipart}}{{#allParams}}{{>serviceQueryParams}}{{>servicePathParams}}{{>serviceHeaderParams}}{{>serviceBodyParams}}{{^isMultipart}}{{>serviceFormParams}},{{/isMultipart}}{{#isMultipart}}{{^isFormParam}},{{/isFormParam}}{{/isMultipart}}{{/allParams}}SecurityContext securityContext)
      throws NotFoundException {
      {{classname}}DAO dao = new {{classname}}DAOImpl();
      String jsonString = JsonUtility.objectToString(dao.{{nickname}}({{#isMultipart}} input,{{/isMultipart}}{{#allParamsWithoutDataType}}{{>serviceQueryParams}}{{>servicePathParams}}{{>serviceHeaderParams}}{{>serviceBodyParams}}{{^isMultipart}}{{>serviceFormParams}},{{/isMultipart}}{{#isMultipart}}{{^isFormParam}},{{/isFormParam}}{{/isMultipart}}{{/allParamsWithoutDataType}} securityContext));
      return Response.ok().entity(new ApiResponseMessage(ApiResponseMessage.OK, jsonString )).build();
  }
  {{/operation}}
}
{{/operations}}
